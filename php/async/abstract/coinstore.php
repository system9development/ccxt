<?php

namespace ccxt\async\abstract;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


abstract class coinstore extends \ccxt\async\Exchange {
    public function public_get_api_v1_market_tickers($params = array()) {
        return $this->request('api/v1/market/tickers', 'public', 'GET', $params);
    }
    public function public_get_api_v1_market_trade_symbol($params = array()) {
        return $this->request('api/v1/market/trade/{symbol}', 'public', 'GET', $params);
    }
    public function public_get_api_v1_market_depth_symbol($params = array()) {
        return $this->request('api/v1/market/depth/{symbol}', 'public', 'GET', $params);
    }
    public function public_post_v2_public_config_spot_symbols($params = array()) {
        return $this->request('v2/public/config/spot/symbols', 'public', 'POST', $params);
    }
    public function private_get_api_v2_trade_order_active($params = array()) {
        return $this->request('api/v2/trade/order/active', 'private', 'GET', $params);
    }
    public function private_get_api_trade_order_historyorders($params = array()) {
        return $this->request('api/trade/order/historyOrders', 'private', 'GET', $params);
    }
    public function private_get_api_v2_trade_order_orderinfo($params = array()) {
        return $this->request('api/v2/trade/order/orderInfo', 'private', 'GET', $params);
    }
    public function private_get_api_trade_match_accountmatches($params = array()) {
        return $this->request('api/trade/match/accountMatches', 'private', 'GET', $params);
    }
    public function private_post_api_spot_accountlist($params = array()) {
        return $this->request('api/spot/accountList', 'private', 'POST', $params);
    }
    public function private_post_api_trade_order_place($params = array()) {
        return $this->request('api/trade/order/place', 'private', 'POST', $params);
    }
    public function private_post_api_trade_order_cancel($params = array()) {
        return $this->request('api/trade/order/cancel', 'private', 'POST', $params);
    }
    public function private_post_api_trade_order_cancelall($params = array()) {
        return $this->request('api/trade/order/cancelAll', 'private', 'POST', $params);
    }
    public function publicGetApiV1MarketTickers($params = array()) {
        return $this->request('api/v1/market/tickers', 'public', 'GET', $params);
    }
    public function publicGetApiV1MarketTradeSymbol($params = array()) {
        return $this->request('api/v1/market/trade/{symbol}', 'public', 'GET', $params);
    }
    public function publicGetApiV1MarketDepthSymbol($params = array()) {
        return $this->request('api/v1/market/depth/{symbol}', 'public', 'GET', $params);
    }
    public function publicPostV2PublicConfigSpotSymbols($params = array()) {
        return $this->request('v2/public/config/spot/symbols', 'public', 'POST', $params);
    }
    public function privateGetApiV2TradeOrderActive($params = array()) {
        return $this->request('api/v2/trade/order/active', 'private', 'GET', $params);
    }
    public function privateGetApiTradeOrderHistoryOrders($params = array()) {
        return $this->request('api/trade/order/historyOrders', 'private', 'GET', $params);
    }
    public function privateGetApiV2TradeOrderOrderInfo($params = array()) {
        return $this->request('api/v2/trade/order/orderInfo', 'private', 'GET', $params);
    }
    public function privateGetApiTradeMatchAccountMatches($params = array()) {
        return $this->request('api/trade/match/accountMatches', 'private', 'GET', $params);
    }
    public function privatePostApiSpotAccountList($params = array()) {
        return $this->request('api/spot/accountList', 'private', 'POST', $params);
    }
    public function privatePostApiTradeOrderPlace($params = array()) {
        return $this->request('api/trade/order/place', 'private', 'POST', $params);
    }
    public function privatePostApiTradeOrderCancel($params = array()) {
        return $this->request('api/trade/order/cancel', 'private', 'POST', $params);
    }
    public function privatePostApiTradeOrderCancelAll($params = array()) {
        return $this->request('api/trade/order/cancelAll', 'private', 'POST', $params);
    }
}