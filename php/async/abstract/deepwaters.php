<?php

namespace ccxt\async\abstract;

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code


abstract class deepwaters extends \ccxt\async\Exchange {
    public function public_get_assets($params = array()) {
        return $this->request('assets', 'public', 'GET', $params);
    }
    public function public_get_pairs($params = array()) {
        return $this->request('pairs', 'public', 'GET', $params);
    }
    public function public_get_pairs_pair_orderbook($params = array()) {
        return $this->request('pairs/{pair}/orderbook', 'public', 'GET', $params);
    }
    public function public_get_time($params = array()) {
        return $this->request('time', 'public', 'GET', $params);
    }
    public function private_get_customer($params = array()) {
        return $this->request('customer', 'private', 'GET', $params);
    }
    public function private_get_customer_api_key_status($params = array()) {
        return $this->request('customer/api-key-status', 'private', 'GET', $params);
    }
    public function private_get_orders($params = array()) {
        return $this->request('orders', 'private', 'GET', $params);
    }
    public function private_get_trades($params = array()) {
        return $this->request('trades', 'private', 'GET', $params);
    }
    public function private_get_orders_by_venue_order_id_id($params = array()) {
        return $this->request('orders/by-venue-order-id/{id}', 'private', 'GET', $params);
    }
    public function private_get_orders_by_customer_object_id_id($params = array()) {
        return $this->request('orders/by-customer-object-id/{id}', 'private', 'GET', $params);
    }
    public function private_post_orders($params = array()) {
        return $this->request('orders', 'private', 'POST', $params);
    }
    public function private_delete_orders($params = array()) {
        return $this->request('orders', 'private', 'DELETE', $params);
    }
    public function private_delete_orders_by_venue_order_id_id($params = array()) {
        return $this->request('orders/by-venue-order-id/{id}', 'private', 'DELETE', $params);
    }
    public function private_delete_orders_by_customer_object_id_id($params = array()) {
        return $this->request('orders/by-customer-object-id/{id}', 'private', 'DELETE', $params);
    }
    public function publicGetAssets($params = array()) {
        return $this->request('assets', 'public', 'GET', $params);
    }
    public function publicGetPairs($params = array()) {
        return $this->request('pairs', 'public', 'GET', $params);
    }
    public function publicGetPairsPairOrderbook($params = array()) {
        return $this->request('pairs/{pair}/orderbook', 'public', 'GET', $params);
    }
    public function publicGetTime($params = array()) {
        return $this->request('time', 'public', 'GET', $params);
    }
    public function privateGetCustomer($params = array()) {
        return $this->request('customer', 'private', 'GET', $params);
    }
    public function privateGetCustomerApiKeyStatus($params = array()) {
        return $this->request('customer/api-key-status', 'private', 'GET', $params);
    }
    public function privateGetOrders($params = array()) {
        return $this->request('orders', 'private', 'GET', $params);
    }
    public function privateGetTrades($params = array()) {
        return $this->request('trades', 'private', 'GET', $params);
    }
    public function privateGetOrdersByVenueOrderIdId($params = array()) {
        return $this->request('orders/by-venue-order-id/{id}', 'private', 'GET', $params);
    }
    public function privateGetOrdersByCustomerObjectIdId($params = array()) {
        return $this->request('orders/by-customer-object-id/{id}', 'private', 'GET', $params);
    }
    public function privatePostOrders($params = array()) {
        return $this->request('orders', 'private', 'POST', $params);
    }
    public function privateDeleteOrders($params = array()) {
        return $this->request('orders', 'private', 'DELETE', $params);
    }
    public function privateDeleteOrdersByVenueOrderIdId($params = array()) {
        return $this->request('orders/by-venue-order-id/{id}', 'private', 'DELETE', $params);
    }
    public function privateDeleteOrdersByCustomerObjectIdId($params = array()) {
        return $this->request('orders/by-customer-object-id/{id}', 'private', 'DELETE', $params);
    }
}